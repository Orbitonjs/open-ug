"use strict";(self.webpackChunkdocumetations=self.webpackChunkdocumetations||[]).push([[6083],{5235:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=t(4848),r=t(8453);const s={sidebar_position:1},i="CRANE KUBERNETES OPERATOR",a={id:"intro",title:"CRANE KUBERNETES OPERATOR",description:"Crane Operator is a Kubernetes operator that simplifies application deployment by enabling you to write one simple yaml configuration file and the operator handles everything else from setting up Pod/Deployments, Services, Volumes, Ingress, SSL and DNS and more.",source:"@site/crane-operator/intro.md",sourceDirName:".",slug:"/intro",permalink:"/open-ug/crane-operator/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar"},c={},l=[];function p(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"crane-kubernetes-operator",children:"CRANE KUBERNETES OPERATOR"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Crane Operator"})," is a Kubernetes operator that simplifies application deployment by enabling you to write one simple ",(0,o.jsx)(n.code,{children:"yaml"})," configuration file and the operator handles everything else from setting up Pod/Deployments, Services, Volumes, Ingress, SSL and DNS and more."]}),"\n",(0,o.jsx)(n.p,{children:"::: info"}),"\n",(0,o.jsx)(n.p,{children:"Documentation is still in progress. Please check back later for more information."}),"\n",(0,o.jsx)(n.p,{children:":::"}),"\n",(0,o.jsxs)(n.p,{children:["It accomplishes this by defining a specification for an ",(0,o.jsx)(n.code,{children:"Application"})," object that you follow while it handles the rest."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"An Example for deploying a Wordpress Instance"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cloud.cranom.tech/v1\nkind: Application\nmetadata:\n  name: wordpress\nspec:\n  image: wordpress:latest\n  # Ports: internal is the internal port that the container exposes\n  # external is the `NodePort` you want to expose to the node\n  ports:\n  - internal: 80\n    external: 30080\n    SSL: true\n    domain: www.example.com\n\n  volumes:\n  - volume-name: wordpress-persistent-storage\n\n  # Note: Crane Operator does not hande or create Secrets so you need to define your own Secrets\n  envFrom: wordpress-secrets\n\n\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);