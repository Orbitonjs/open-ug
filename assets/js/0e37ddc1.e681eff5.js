"use strict";(self.webpackChunkdocumetations=self.webpackChunkdocumetations||[]).push([[4224],{6730:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var t=n(4848),i=n(8453);const d={sidebar_position:6},s="API Reference",r={id:"api",title:"API Reference",description:"Reactjs Media provides a set of components and simple API to create a customizable media player for your application.",source:"@site/reactjs-media/api.md",sourceDirName:".",slug:"/api",permalink:"/open-ug/reactjs-media/api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"WebRTC Guide",permalink:"/open-ug/reactjs-media/web-rtc-guide"}},a={},l=[{value:"Components",id:"components",level:2},{value:"Video",id:"video",level:3},{value:"VideoControls",id:"videocontrols",level:3},{value:"VideoContext",id:"videocontext",level:3},{value:"VideoElement",id:"videoelement",level:3},{value:"Hooks",id:"hooks",level:2},{value:"useControls",id:"usecontrols",level:3},{value:"Types",id:"types",level:2},{value:"VideoProps",id:"videoprops",level:3},{value:"VideoPlayerRef",id:"videoplayerref",level:3}];function c(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(o.p,{children:"Reactjs Media provides a set of components and simple API to create a customizable media player for your application."}),"\n",(0,t.jsxs)(o.p,{children:["This page contains the API reference for the components, functions, and types provided by the ",(0,t.jsx)(o.code,{children:"reactjs-media"})," package."]}),"\n",(0,t.jsx)(o.h2,{id:"components",children:"Components"}),"\n",(0,t.jsx)(o.h3,{id:"video",children:"Video"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"Video: React.ForwardRefExoticComponent<VideoProps & react.RefAttributes<any>>"})," - It is a default customizable video player component that can be used to play videos in your application."]}),"\n",(0,t.jsx)(o.h3,{id:"videocontrols",children:"VideoControls"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"VideoControls: React.ForwardRefExoticComponent<VideoControlsProps & react.RefAttributes<any>>"})," - It is a component containing the controls that can be used to control the video player."]}),"\n",(0,t.jsx)(o.h3,{id:"videocontext",children:"VideoContext"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"VideoContext: React.Context<VideoCTX>"})," - It is a context that provides the state and methods to control the video player."]}),"\n",(0,t.jsx)(o.h3,{id:"videoelement",children:"VideoElement"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"VideoElement: JSX.Element"})," - It is a component that wraps the HTML5 video element and provides the state and methods to control the video player."]}),"\n",(0,t.jsx)(o.h2,{id:"hooks",children:"Hooks"}),"\n",(0,t.jsx)(o.h3,{id:"usecontrols",children:"useControls"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"useControls()"})," - This hook returns the methods to control the video player, such as ",(0,t.jsx)(o.code,{children:"play"}),", ",(0,t.jsx)(o.code,{children:"pause"}),", ",(0,t.jsx)(o.code,{children:"togglePlay"}),", ",(0,t.jsx)(o.code,{children:"seek"}),", ",(0,t.jsx)(o.code,{children:"setVolume"}),", ",(0,t.jsx)(o.code,{children:"toggleMute"}),", ",(0,t.jsx)(o.code,{children:"toggleFullScreen"}),", etc."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-jsx",children:"const { play, pause, togglePlay, seek, setVolume, toggleMute, toggleFullScreen } = useControls();\n"})}),"\n",(0,t.jsx)(o.h2,{id:"types",children:"Types"}),"\n",(0,t.jsx)(o.h3,{id:"videoprops",children:"VideoProps"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"VideoProps"})," - It is an interface that defines the props accepted by the Video component."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-typescript",children:"interface VideoProps {\n  controls?: boolean;\n  src: string;\n  height: string | number;\n  width: string | number;\n  poster: string;\n  contextMenu?: boolean;\n  contextMenuItems?: Array<ContextMenuItem>;\n  onTimeUpdate?: (time: number) => void;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onEnded?: () => void;\n  onVolumeChange?: (volume: number) => void;\n  onSeeking?: () => void;\n  onSeeked?: () => void;\n  onLoadedMetadata?: () => void;\n  onLoadedData?: () => void;\n  onCanPlay?: () => void;\n}\n"})}),"\n",(0,t.jsx)(o.h3,{id:"videoplayerref",children:"VideoPlayerRef"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"VideoPlayerRef"})," - It used to define the ref for the Video component. This ref can be used to access the methods to control the video player."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-typescript",children:"type VideoPlayerRef = {\n  play: () => void;\n  pause: () => void;\n  seek: (time: number) => void;\n  volume: (volume: number) => void;\n  playbackRate: (rate: number) => void;\n  toggleFullscreen: () => void;\n  togglePip: () => void;\n  toggleMute: () => void;\n  togglePlay: () => void;\n  setLoop: (loop: boolean) => void;\n};\n"})}),"\n",(0,t.jsx)(o.p,{children:(0,t.jsx)(o.a,{href:"https://www.digitalocean.com/?refcode=ad96e8b378d5&utm_campaign=Referral_Invite&utm_medium=Referral_Program&utm_source=badge",children:(0,t.jsx)(o.img,{src:"https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%201.svg",alt:"DigitalOcean Referral Badge"})})})]})}function p(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>r});var t=n(6540);const i={},d=t.createContext(i);function s(e){const o=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(d.Provider,{value:o},e.children)}}}]);